x[upper.tri(x)]
upper.tri(x)
mod <- lm(mpg ~ wt, data = mtcars)
mod
mod[1]
mod[2]
mod[3]
mod[4]
mod[5]
mod[6]
mod[7]
mod[8]
(summary(mod))
(summary(mod))[1]
(summary(mod))[2]
(summary(mod))[3]
(summary(mod))[4]
(summary(mod))[5]
(summary(mod))[6]
(summary(mod))[7]
(summary(mod))[8]
x <- 1:5
x[c(1, 2)] <- 2:3
df <- data.frame(a = c(1, 10, NA))
df$a[df$a < 5] <- 0
df
df$a
str(mtcars)
mtcars[] <- lapply(mtcars, as.integer)
str(mtcars)
mtcars <- lapply(mtcars, as.integer)
str(mtcars)
grades <- c(1, 2, 2, 3, 1)
info <- data.frame(
grade = 3:1,
desc = c("Excellent", "Good", "Poor"),
fail = c(F, F, T)
)
grades
info
id <- match(grades, info$grade)
id
info[1,]
info[id,]
df <- data.frame(x = rep(1:3, each = 2), y = 6:1, z = letters[1:6])
df
set.seed(10)
sample(nrow(df))
df <- data.frame(x = c(2, 4, 1), y = c(9, 11, 6), n = c(3, 5, 1))
df
nrow(df)
rep(1:nrow(df))
rep(1:nrow(df),df$n)
rep(1:nrow(df),df$y)
df[rep(1:nrow(df),df$n),]
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df(c(1,2))
df[c(1,2)]
df[c(1,3)]
(x1 <- 1:10 %% 2 == 0)
x1
(x2 <- which(x1))
?which
mtcars
rm(mtcars)
mtcars
c<-mtcars
c[,sample(1:ncol(c))]
?sample
c<-mtcars
c[sample(nrow(c),5),]
first <- sample(nrow(c)-5,1)
first
last <- first+m
last<-26
select<-21:26
c[select,]
?dir.create
load("C:/MelinaStuff/Contracts/SpaDES/local_github/McIntire-lab/Melina/packages/testpackage/.RData")
treecover<-read.table("C:\MelinaStuff\Contracts\BAM\SAR_CH\gisdata\Hansen treecover/treecover2000.txt", header = FALSE)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM3SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover
treecover <- susbset(treecover, !(treecover %in% "E.txt"))
treecover <- subset(treecover, !(treecover %in% "E.txt"))
treecover
treecover <- subset(treecover, !(treecover %in% "E.tif"))
treecover
treecover <- subset(treecover, endsWith(treecover, "E.tif"))
treecover <- subset(treecover, grepl('E.tif$', treecover))
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
grepl('E.tif$', treecover)
treecover
x <- 'ABCDE'
grepl('DE$', x)
x
library(dplyr)
treecover <- select(treecover, ends_with("E.tif"))
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- select(treecover, ends_with("E.tif"))
treecover
treecover <- subset(treecover, treecover %like% "E.tif$")
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- subset(treecover, treecover %like% "E.tif$")
library(data.table)
treecover <- subset(treecover, treecover %like% "E.tif$")
treecover
treecover <- treecover[grepl('E.tif$', treecover),]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
str(treecover)
treecover
treecover <- treecover[grepl('E.tif$', treecover$v1),]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- treecover[grepl("E.tif$", treecover$v1),]
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- treecover[grepl("E.tif$", treecover$v1),]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- treecover[grep("E.tif$", treecover$v1),]
treecover
treecover <- treecover[grep("E.tif", treecover$v1),]
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
treecover <- treecover[grep("E.tif", treecover$v1),]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
trrecover$v1
treecover$v1
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE)
tc <- as.vector(treecover)
tc
tc2 <- tc[grep("E.tif$", tc),]
tc2
tc
str(tc)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = TRUE)
treecover
str(treecover)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
str(treecover)
tc <- as.vector(treecover)
tc
tc2 <- tc[grep("E.tif$", tc),]
tc2
tc[1:10]
tc <- as.vector(treecover)
str(tc)
class(treecover)
class(treecover$V1)
tc<-treecover$V1
tc
class(tc)
tc2 <- tc[grep("E.tif$", tc),]
tc2 <- tc[grep("E.tif$", tc)]
tc2
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = TRUE)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- class(treecover$v1)
treecover <- treecover[grep("W.tif$", treecover)]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- class(treecover$v1)
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover
class(treecover$v1)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover <- as.vector(treecover)
treecover
str(treecover)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
as.vector(treecover$v1)
class(treecover$v1)
treecover
tc<-treecover$V1
str(tc)
treecover <- treecover$V1
treecover <- treecover[grep("W.tif$", treecover)]
treecover
treecover <- treecover[!(grep("10W.tif$", treecover)) & !(grep("20W.tif$", treecover)) & !(grep("30W.tif$", treecover))]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$v1
treecover <- treecover[grep("W.tif$", treecover)]
treecover <- treecover[!(grep("10W.tif$", treecover))]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$v1
treecover <- treecover[grep("W.tif$", treecover)]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$v1
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover
treecover<- treecover$v1
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover$v1
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover
str(treecover)
treecover$V1
treecover<- treecover$V1
treecover
treecover <- treecover[grep("W.tif$", treecover)]
treecover
treecover <- treecover[!(grep("10W.tif$", treecover))]
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$V1
treecover <- treecover[grep("W.tif$", treecover)]
tc <- treecover[!(grep("010W.tif$", treecover))]
tc
treecover <- treecover[grep("W.tif$", treecover)]
tc <- !(grep("010W.tif$", treecover))
tc
treecover
tc <- subset(treecover,!(grep("010W.tif$", treecover)))
tc
length(treecover)
grep("010W.tif$", treecover)
!(grep("010W.tif$", treecover))
!grep("010W.tif$", treecover)
tc <- subset(treecover,!grep("010W.tif$", treecover))
tc
treecover
str(treecover)
treecover <- treecover[grep("W.tif$", treecover)]
tc <- subset(treecover,!(grep("010W.tif$", treecover)))
tc
tc <- subset(treecover,grep("010W.tif$", treecover))
grep("010W.tif$", treecover)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- subset(treecover, V1 == "W.tif$")
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover$V1
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- subset(treecover, V1 == "W.tif")
treecover
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- subset(treecover, treecover$V1 == "W.tif")
treecover
grep("010W.tif$", treecover)
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$V1
treecover <- treecover[grep("W.tif$", treecover)]
treecover
tc <- subset(treecover,!(grepl("010W.tif$", treecover)))
tc
grep("W.tif$", treecover)
tc <- subset(treecover,!(grepl("010W.tif$", treecover)) &
!(grep("20W.tif$", treecover)) &
!(grep("30W.tif$", treecover)))
tc
tc <- subset(treecover,!(grepl("010W.tif$", treecover)) &
!(grepl("20W.tif$", treecover)) &
!(grepl("30W.tif$", treecover)))
tc
tc <- subset(treecover,!(grepl("010W.tif$", treecover)) &
!(grepl("020W.tif$", treecover)) &
!(grepl("030W.tif$", treecover)))
tc
outDir <- "C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/treecoverAmerica"
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
treecover<- treecover$V1
treecover
treecover <- treecover[grep("W.tif$", treecover)]
tc <- subset(treecover,!(grepl("010W.tif$", treecover)) &
!(grepl("020W.tif$", treecover)) &
!(grepl("030W.tif$", treecover)))
basename(tc[1])
lapply(tc, function(x) download(x, file.path(outDir, basename(x)), mode="wb"))
library(RCurl) #getURL
library(downloader) # download
library(tools) # file_path_sans_ext file_ext
library(XML) # readHTMLTable
library(dplyr)
lapply(tc, function(x) download(x, file.path(outDir, basename(x)), mode="wb"))
loss<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/loss.txt", header = FALSE)
loss<- loss$V1
loss
loss <- loss[grep("W.tif$", loss)]
tc <- subset(loss,!(grepl("010W.tif$", loss)) &
!(loss("020W.tif$", loss)) &
!(loss("030W.tif$", loss)))
loss<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/loss.txt", header = FALSE)
lossfor<- loss$V1
lossfor <- lossfor[grep("W.tif$", lossfor)]
lossfor <- subset(lossfor,!(grepl("010W.tif$", lossfor)) &
!(lossfor("020W.tif$", lossfor)) &
!(lossfor("030W.tif$", lossfor)))
lossfor <- subset(lossfor,!(grepl("010W.tif$", lossfor)) &
!(grepl("020W.tif$", lossfor)) &
!(grepl("030W.tif$", lossfor)))
lossfor
lapply(tc, function(x) download(x, file.path(lossDir, basename(x)), mode="wb"))
lossDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/lossAmerica"
gainDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/gainAmerica"
maskdataDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/maskAmerica"
lossyearDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/lossyearAmerica"
firstDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/firstAmerica"
lastDir <-"C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/lastAmerica"
lapply(tc, function(x) download(x, file.path(lossDir, basename(x)), mode="wb"))
lossfor<- loss$V1
lossfor <- lossfor[grep("W.tif$", lossfor)]
lossfor <- subset(lossfor,!(grepl("010W.tif$", lossfor)) &
!(grepl("020W.tif$", lossfor)) &
!(grepl("030W.tif$", lossfor)))
lossfor<- loss$V1
lossfor <- lossfor[grep("W.tif$", lossfor)]
lossfor <- subset(lossfor,!(grepl("010W.tif$", lossfor)) &
!(grepl("020W.tif$", lossfor)) &
!(grepl("030W.tif$", lossfor)))
tc<-lossfor[1:10]
tc
lapply(tc, function(x) download(x, file.path(lossDir, basename(x)), mode="wb"))
basename(tc[1])
tc<-lossfor[1:10]
basename(tc[1])
tc[1]
lossfor<- loss$V1
lossfor
loss<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/loss.txt", header = FALSE)
lossfor<- loss$V1
lossfor
treecover<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/treecover2000.txt", header = FALSE, stringsAsFactors = FALSE)
loss<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/loss.txt", header = FALSE, stringsAsFactors = FALSE)
gain<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/gain.txt", header = FALSE, stringsAsFactors = FALSE)
maskdata<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/maskdata.txt", header = FALSE, stringsAsFactors = FALSE)
lossyear<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/lossyear.txt", header = FALSE, stringsAsFactors = FALSE)
first<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/first.txt", header = FALSE, stringsAsFactors = FALSE)
last<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/last.txt", header = FALSE, stringsAsFactors = FALSE)
lossfor<- loss$V1
lossfor <- lossfor[grep("W.tif$", lossfor)]
lossfor <- subset(lossfor,!(grepl("010W.tif$", lossfor)) &
!(grepl("020W.tif$", lossfor)) &
!(grepl("030W.tif$", lossfor)))
tc<-lossfor[1:10]
lapply(tc, function(x) download(x, file.path(lossDir, basename(x)), mode="wb"))
gainfor<- gain$V1
gainfor <- gainfor[grep("W.tif$", gainfor)]
gainfor <- subset(gainfor,!(grepl("010W.tif$", gainfor)) &
!(grepl("020W.tif$", gainfor)) &
!(grepl("030W.tif$", gainfor)))
tc<-gainfor[1:10]
lapply(tc, function(x) download(x, file.path(gainDir, basename(x)), mode="wb"))
mask<- maskdata$V1
mask <- mask[grep("W.tif$", mask)]
mask <- subset(mask,!(grepl("010W.tif$", mask)) &
!(grepl("020W.tif$", mask)) &
!(grepl("030W.tif$", mask)))
# Download
tc<-mask[1:10]
lapply(tc, function(x) download(x, file.path(maskDir, basename(x)), mode="wb"))
maskdata<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/maskdata.txt", header = FALSE, stringsAsFactors = FALSE)
maskdata<-read.table("C:/MelinaStuff/Contracts/BAM/SAR_CH/gisdata/HansenTreecover/link2dwd/datamask.txt", header = FALSE, stringsAsFactors = FALSE)
mask<- maskdata$V1
mask <- mask[grep("W.tif$", mask)]
mask <- subset(mask,!(grepl("010W.tif$", mask)) &
!(grepl("020W.tif$", mask)) &
!(grepl("030W.tif$", mask)))
# Download
tc<-mask[1:10]
lapply(tc, function(x) download(x, file.path(maskDir, basename(x)), mode="wb"))
lapply(tc, function(x) download(x, file.path(maskdataDir, basename(x)), mode="wb"))
first<- first$V1
first <- first[grep("W.tif$", first)]
first <- subset(first,!(grepl("010W.tif$", first)) &
!(grepl("020W.tif$", first)) &
!(grepl("030W.tif$", first)))
# Download
tc<-first[1:10]
lapply(tc, function(x) download(x, file.path(firstDir, basename(x)), mode="wb"))
tc<-first[2:10]
lapply(tc, function(x) download(x, file.path(firstDir, basename(x)), mode="wb"))
tc<-first[3:10]
lapply(tc, function(x) download(x, file.path(firstDir, basename(x)), mode="wb"))
Q
C
lossy<- lossyear$V1
lossy <- lossy[grep("W.tif$", lossy)]
lossy <- subset(lossy,!(grepl("010W.tif$", lossy)) &
!(grepl("020W.tif$", lossy)) &
!(grepl("030W.tif$", lossy)))
# Download
tc<-lossy[1:10]
lapply(tc, function(x) download(x, file.path(lossyearDir, basename(x)), mode="wb"))
Q
dd<- "C:/temp/leleel/dfmdfkd/lal.txt"
filePath(dd)
install.packages("R.utils")
filePath(dd)
library(R.utils)
filePath(dd)
path(dd)
install.packages("igraph")
library(igraph)
library(igraph)
igraph::path(dd)
getwd()
dirname(dd)
library(SpaDES)
url<-"http://cwfis.cfs.nrcan.gc.ca/downloads/nfdb/fire_poly/current_version/NFDB_poly_20160712_metadata.pdf"
url<-"http://cwfis.cfs.nrcan.gc.ca/downloads/nfdb/fire_poly/current_version/NFDB_poly_20160712_metadata.pdf"
outdir<-tempdir()
library(utils)
download.file(url, outfile)
outfile<-file.path(tempdir(), basename(url))
download.file(url, outfile)
tempdir()
download.file(url, outfile)
cache(cacheRepo = tempdir(), download.file, url, outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = tempdir(), download.file, url, outfile, notOlderThan = NULL)
outdir <- tempdir()
outfile<-file.path(outdir, basename(url))
download.file(url, outfile)
sim <- SpaDES::simInit(times = list(start=0.0, end=5.0),
objects=list(),
params = list(),
modules = list(),
paths = list(outputPath=outdir))
SpaDES::cache(sim, cacheRepo = outdir, download.file, url, outfile, notOlderThan = NULL)
sim <- SpaDES::simInit(times = list(start=0.0, end=5.0),
objects=list(),
params = list(),
modules = list(),
paths = list(outputPath=outdir))
SpaDES::cache(sim, cacheRepo = outdir, download.file, url, outfile, notOlderThan = NULL)
sim
SpaDES::Cache(sim, cacheRepo = outdir, download.file, url, outfile, notOlderThan = NULL)
SpaDES::cache(sim, cacheRepo = outdir, download.file, url, outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
library("devtools")
install_github("PredictiveEcology/SpaDES", ref = "development", dependencies = TRUE)
library("SpaDES", lib.loc="C:/Program Files/R/R-3.3.3/library")
detach("package:SpaDES", unload=TRUE)
install_github("PredictiveEcology/SpaDES", dependencies = TRUE)
sim <- SpaDES::simInit(times = list(start=0.0, end=5.0),
objects=list(),
params = list(),
modules = list(),
paths = list(outputPath=outdir))
SpaDES::cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
Cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
digest::cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
archivist::cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
repoDir
cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
library(archivist)
cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
setwd<-outdir
sim <- SpaDES::simInit(times = list(start=0.0, end=5.0),
objects=list(),
params = list(),
modules = list(),
paths = list(outputPath=outdir))
cache(cacheRepo = "C:/temp", download.file, url=url, destfile = outfile, notOlderThan = NULL)
createLocalRepo(outdir, force = TRUE, default = FALSE)
cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
createLocalRepo(outdir, force = TRUE, default = FALSE)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
createLocalRepo(outdir, force = TRUE, default = FALSE)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
SpaDES::cache(cacheRepo = outdir, download.file, url=url, destfile = outfile, notOlderThan = NULL)
library(dwdCasfri)
setwd("C:/MelinaStuff/Contracts/BAM/local_github/bamSpatial/demoSpatialData")
setwd("C:/MelinaStuff/Contracts/BAM/local_github/BamSpatial/demoSpatialData")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
render("index.Rmd")
rmarkdown::render("index.Rmd")
library(viridis)
image(volcano, col = viridis(200))
image(volcano, col = viridis(200, option = "A"))
ple.Rmd
render("1-example.Rmd")
library(rmarkdown)
render("1-example.Rmd")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
file.create("style.css") #Create ana style file
file.create("footer.html")
rmarkdown::render_site()
rmarkdown::render_site()
